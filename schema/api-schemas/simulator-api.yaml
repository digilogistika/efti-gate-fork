---
openapi: 3.0.1
info:
  title: Efti Gate
  description: Efti gate
  version: '1.0'
servers:
- url: http://localhost:8880
  description: Generated server url
tags:
- name: Identifiers query
  description: Interface to search for identifiers
- name: Follow up communication
  description: 'Interface to send a follow up communication to a platform '
- name: UIL query
  description: Interface to manage dataset request
paths:
  "/v1/control/uil":
    get:
      tags:
      - UIL query
      summary: Get a response to an UIL query
      description: Get a dataset for a given request id
      operationId: getRequestUil
      parameters:
      - name: requestId
        in: query
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/RequestIdDto"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
    post:
      tags:
      - UIL query
      summary: Send an UIL query
      description: Send a query for given UIL
      operationId: requestUil
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UilDto"
        required: true
      responses:
        '202':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/RequestIdDto"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
  "/v1/control/uil/follow-up":
    post:
      tags:
      - Follow up communication
      summary: Send follow up communication
      description: Send a follow up communication to a platform for a given control
      operationId: createNote
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PostFollowUpRequestDto"
        required: true
      responses:
        '202':
          description: Accepted
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/NoteResponseDto"
        '400':
          description: Bad Request
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/NoteResponseDto"
        '401':
          description: Unauthorized
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/NoteResponseDto"
        '403':
          description: Forbidden
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/NoteResponseDto"
        '500':
          description: Internal server error
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/NoteResponseDto"
  "/v1/control/identifiers":
    get:
      tags:
      - Identifiers query
      summary: Get a response to an identifiers query
      description: Get a response to an identifiers query for given request id
      operationId: getIdentifiersResult
      parameters:
      - name: requestId
        in: query
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/IdentifiersResponseDto"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
    post:
      tags:
      - Identifiers query
      summary: Send an identifiers query
      description: Send a query to retrieve identifiers matching the search criteria
      operationId: getIdentifiers
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SearchWithIdentifiersRequestDto"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/RequestIdDto"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
components:
  schemas:
    UilDto:
      required:
      - datasetId
      - gateId
      - platformId
      type: object
      properties:
        gateId:
          maxLength: 255
          minLength: 0
          pattern: "^[-@./#&+\\w\\s]*$"
          type: string
          example: regex = ^[-@./#&+\w\s]*$
        platformId:
          maxLength: 255
          minLength: 0
          pattern: "^[-@./#&+\\w\\s]*$"
          type: string
          example: regex = ^[-@./#&+\w\s]*$
        subsetId:
          type: array
          items:
            type: string
        datasetId:
          maxLength: 36
          minLength: 0
          pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
          type: string
          example: regex = [a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}
    RequestIdDto:
      required:
      - requestId
      - status
      type: object
      properties:
        requestId:
          type: string
        status:
          type: string
          enum:
          - PENDING
          - COMPLETE
          - ERROR
          - TIMEOUT
        errorCode:
          type: string
        errorDescription:
          type: string
        data:
          type: array
          items:
            type: string
            format: byte
    PostFollowUpRequestDto:
      type: object
      properties:
        message:
          maxLength: 255
          minLength: 0
          type: string
        requestId:
          type: string
    NoteResponseDto:
      required:
      - message
      type: object
      properties:
        message:
          type: string
        errorCode:
          type: string
        errorDescription:
          type: string
    AuthorityDto:
      required:
      - country
      - isEmergencyService
      - legalContact
      - name
      - nationalUniqueIdentifier
      - workingContact
      type: object
      properties:
        id:
          type: integer
          format: int32
        country:
          type: string
        legalContact:
          "$ref": "#/components/schemas/ContactInformationDto"
        workingContact:
          "$ref": "#/components/schemas/ContactInformationDto"
        isEmergencyService:
          type: boolean
        name:
          type: string
        nationalUniqueIdentifier:
          type: string
    ContactInformationDto:
      required:
      - buildingNumber
      - city
      - email
      - postalCode
      - streetName
      type: object
      properties:
        id:
          type: integer
          format: int32
        email:
          maxLength: 255
          minLength: 0
          type: string
        streetName:
          maxLength: 300
          minLength: 0
          type: string
        buildingNumber:
          maxLength: 50
          minLength: 0
          type: string
        city:
          maxLength: 100
          minLength: 0
          type: string
        additionalLine:
          maxLength: 300
          minLength: 0
          type: string
        postalCode:
          maxLength: 50
          minLength: 0
          type: string
    SearchWithIdentifiersRequestDto:
      required:
      - identifier
      type: object
      properties:
        modeCode:
          pattern: "^\\d$"
          type: string
        identifier:
          pattern: "^[A-Za-z0-9]*$"
          type: string
        identifierType:
          type: array
          items:
            type: string
        registrationCountryCode:
          type: string
        authority:
          "$ref": "#/components/schemas/AuthorityDto"
        dangerousGoodsIndicator:
          type: boolean
        eftiGateIndicator:
          type: array
          items:
            type: string
    CarriedTransportEquipmentApiDto:
      type: object
      properties:
        id:
          type: string
        schemeAgencyId:
          type: string
        sequenceNumber:
          type: integer
          format: int32
    ConsignmentApiDto:
      type: object
      properties:
        platformId:
          type: string
        datasetId:
          type: string
        gateId:
          type: string
        carrierAcceptanceDatetime:
          type: string
          format: date-time
        deliveryEventActualOccurrenceDatetime:
          type: string
          format: date-time
        mainCarriageTransportMovement:
          type: array
          items:
            "$ref": "#/components/schemas/MainCarriageTransportMovementApiDto"
        usedTransportEquipment:
          type: array
          items:
            "$ref": "#/components/schemas/UsedTransportEquipmentApiDto"
    IdentifiersResponseDto:
      type: object
      properties:
        eFTIGate:
          type: string
          enum:
          - AT
          - BE
          - BG
          - HR
          - CY
          - CZ
          - DK
          - EE
          - FI
          - FR
          - DE
          - GR
          - HU
          - IE
          - IT
          - LV
          - LT
          - LU
          - MT
          - NL
          - PL
          - PT
          - RO
          - SK
          - SI
          - ES
          - SE
          - SY
          - LI
          - BO
        requestId:
          type: string
        status:
          type: string
          enum:
          - PENDING
          - COMPLETE
          - ERROR
          - TIMEOUT
        errorCode:
          type: string
        errorDescription:
          type: string
        identifiers:
          type: array
          items:
            "$ref": "#/components/schemas/ConsignmentApiDto"
      xml:
        name: body
    MainCarriageTransportMovementApiDto:
      type: object
      properties:
        id:
          type: string
        schemeAgencyId:
          type: string
        modeCode:
          type: integer
          format: int32
        dangerousGoodsIndicator:
          type: boolean
        registrationCountryCode:
          type: string
    UsedTransportEquipmentApiDto:
      type: object
      properties:
        id:
          type: string
        sequenceNumber:
          type: integer
          format: int32
        schemeAgencyId:
          type: string
        registrationCountry:
          type: string
        categoryCode:
          type: string
        carriedTransportEquipment:
          type: array
          items:
            "$ref": "#/components/schemas/CarriedTransportEquipmentApiDto"