services:
  harmony-eu-ee11:
    image: niis/harmony-ap:2.5.0
    container_name: harmony-ap-eu-ee11
    depends_on:
      harmony-db-eu-ee11:
        condition: service_started
    environment:
      - DB_HOST=harmony-db-eu-ee11
      - DB_SCHEMA=harmony_ap
      - DB_PASSWORD=${HARMONY_MYSQL_PASSWORD}
      - ADMIN_PASSWORD=${HARMONY_ADMIN_PASSWORD}
      - USE_DYNAMIC_DISCOVERY=false
      - PARTY_NAME=eu-ee11
      - SECURITY_KEYSTORE_PASSWORD=${HARMONY_KEY_PASSWORD}
      - SECURITY_TRUSTSTORE_PASSWORD=${HARMONY_KEY_PASSWORD}
      - TLS_KEYSTORE_PASSWORD=${HARMONY_KEY_PASSWORD}
      - TLS_TRUSTSTORE_PASSWORD=${HARMONY_KEY_PASSWORD}
      - EXTERNAL_LB=true
    volumes:
      - ap_data_eu-ee11:/var/opt/harmony-ap
      - ./harmony/eu-ee11/ws-plugin.properties:/var/opt/harmony-ap/etc/plugins/config/ws-plugin.properties
    ports:
      - "127.0.0.1:8080:8080"
    networks:
      - efti-network
    restart: on-failure
    mem_limit: 1500m
    user: "root:root"

  harmony-db-eu-ee11:
    image: mysql:8
    container_name: harmony-db-eu-ee11-instance
    environment:
      - MYSQL_ROOT_PASSWORD=${HARMONY_MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=harmony_ap
      - MYSQL_USER=harmony_ap
      - MYSQL_PASSWORD=${HARMONY_MYSQL_PASSWORD}
    command:
      - "--character-set-server=utf8mb4"
      - "--collation-server=utf8mb4_bin"
    volumes:
      - db_data_eu-ee11:/var/lib/mysql
    networks:
      - efti-network
    restart: on-failure
    mem_limit: 512m

  efti-rabbitmq:
    image: rabbitmq:3-management
    container_name: efti-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      - ./rabbitmq/rabbitmq-defs.json:/etc/rabbitmq/definitions.json
    networks:
      - efti-network

  efti-psql:
    image: postgres:15.4
    container_name: reference-gate-shared-db
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: efti'
    volumes:
      - ./sql:/docker-entrypoint-initdb.d
    networks:
      - efti-network

  efti-psql-meta:
    container_name: efti-psql-meta
    image: postgres:15.4
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: efti
    volumes:
      - ./sql-meta:/docker-entrypoint-initdb.d
    networks:
      - efti-network

  efti-gate-eu-ee11:
    build:
      context: ../
      dockerfile: ./deploy/gate/Dockerfile
    container_name: efti-gate-eu-ee11-instance
    environment:
      - PROFILE=EE
      - PORT=8882
    env_file:
      - .env
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8882/actuator/health || exit 1" ]
      interval: 5s
      timeout: 5s
      retries: 100
    depends_on:
      - efti-rabbitmq
      - efti-psql
      - efti-psql-meta
    ports:
      - "127.0.0.1:8882:8882"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - efti-network
    restart: on-failure

  efti-platform-estplat:
    build:
      context: ../
      dockerfile: ./deploy/platform/Dockerfile
    environment:
      - PROFILE=ESTPLAT
      - PORT=8071
    env_file:
      - .env
    container_name: efti-platform-estplat-instance
    depends_on:
      - efti-psql
    ports:
      - "127.0.0.1:8071:8071"
    networks:
      - efti-network
    restart: on-failure

  setup-gate-indicators:
    build:
      dockerfile: Dockerfile
      context: ./gate-db
    depends_on:
      - efti-gate-eu-ee11
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

networks:
  efti-network:

volumes:
  ap_data_eu-ee11:
  db_data_eu-ee11:
